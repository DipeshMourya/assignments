Website Designing-HTML5

1.What are the new tags added in HTML5?
 As we know that HTML5 is a new version of HTML ( Hypertext markup language). HTML5 introduced many new tags that will benefit many developers. These tags are generally supported by all major browsers. 
 These tags belong to many aspects such as graphics, media, and forms.
   

2.How to embed audio and video in a webpage?
 Embed Audio:
  To embed audio in HTML, we use the <audio> tag. Before HTML5, audio cannot be added to web pages in the Internet Explorer era. To play audio, we used web plugins like Flash. After the release of HTML5, it is possible. 
  This tag supports Chrome, Firefox, Safari, Opera, and Edge in three audio formats – MP3, WAV, OGG. Only Safari browser doesn’t support OGG audio format.
  Syntax:
    <audio>
      <source src="file_name" type="audio_file_type">
    </audio>

 Embed Video:
  To embed video in HTML, we use the <video> tag. It contains one or more video sources at a time using <source> tag. It supports MP4, WebM, and Ogg in all modern browsers. 
  Only Ogg video format doesn’t support in Safari browser. 
  Syntax:
   <video>
      <source src="file_name" type="video_file_type">
   </video>

3.Semantic element in HTML5?
 Semantic elements are one of the most significant introductions in HTML5. In the previous versions of HTML, the generic <div> tag with an id or class attribute was used for 
 structuring a web page. For example, for defining sidebars, footers, menu or other structural blocks, the <div> tag was used with the corresponding meaning (div class="footer").
 Semantic elements in HTML have intrinsic meaning and convey that meaning both to the browser and the developer. They clearly define what kind of content they contain 
 (for example, the <footer> tag is used instead of <div id="footer">).
  
  <header> element:
     The <header> element defines a header for the document or section. It usually contains a logo, search bar, navigation links, etc.
  <nav> element:
     The <nav> element defines a block of navigation links, either within the current document or to other documents. Note, that not all links in the HTML document can be 
     placed inside the <nav> element; it can only include major navigation blocks. For example, the <nav> tag cannot be placed in the <footer> tag for defining links in the 
     footer of the website.  
  <article> element:
     The <article> element is used to specify an independent, self-contained content (articles, blog posts, comments, etc.). The content of the element has its meaning, 
     and it is easily differentiated from the rest of the webpage content.
  <section> element:
     The <section> element is used to group standalone sections within a webpage containing logically connected content (news block, contact information etc.).          
  <aside> element:
     The <aside> element defines a section with additional information related to the content around the <aside> element. It is generally used to enhance an article with 
     additional information, or highlight the parts that can be interesting to the user.    
  <footer> element:
     The <footer> element defines the footer of a web page or a section. As a rule, it contains copyright information, contact details, navigation links, etc.
  <address> element:
     The <address> element is used to provide contact information of the author or the owner of an article, document or the website.
  <main> element:
     The <main> element defines the main content of the page. The content of the <main> tag must be unique and not duplicate blocks of the same type that are repeated 
     in other documents, such as the header of a site, footer, menu, search, copyright information, etc.    
  <figure> element:
     The <figure> element is used for indicating self-contained content. The tag can include images, diagrams, illustrations, code examples, etc.
  <figcaption> element: 
     The <figcaption> element is used for adding signature or annotation to the <figure> tag.
  <time> element:
     The <time> element defines a human-readable time on a 24-hour clock or a precise date in the Gregorian calendar.
  <mark> element:
     The <mark> element is used to mark a part of the text which has relevance. It can be used to highlight a text for showing emphasis, highlight 
     search terms in search results to provide context, or distinguish a new content added by the user by showing it differently.
  <bdi> element:
     The <bdi> element is used to isolate bidirectional text when a language with a right-to-left directionality, such as Arabic or Hebrew, is used inline with left-to-right languages.
  <wbr> element:
     The <wbr> tag is used to instruct the browser, where a line-break could be added in the text. Unlike the <br> tag, which obliges the browser to 
     insert a line-break, in the case of <wbr> the browser first analyzes its content, and then inserts a line-break if necessary (too long word or URL address). 

4.Canvas and SVG tags
 The HTML <svg> element is a container for SVG graphics. SVG stands for Scalable Vector Graphics. SVG and useful for defining graphics such as boxes, circles, text, etc. SVG stands for Scalable Vector Graphics and is a language 
 for describing 2D-graphics and graphical applications in XML and the XML is then rendered by an SVG viewer. Most of the web browsers can display SVG just like they can display PNG, GIF, and JPG. 
 The HTML <canvas> element is used to draw graphics, via JavaScript. The<canvas> element is a container for graphics.
 SVG:
  SVG has better scalability. So it can be printed with high quality at any resolution
  SVG gives better performance with smaller number of objects or larger surface.
  SVG can be modified through script and CSS
  SVG is vector based and composed of shapes.
Canvas:
  Canvas has poor scalability. Hence it is not suitable for printing on higher resolution
  Canvas gives better performance with smaller surface or larger number of objects.
  Canvas can be modified through script only
  Canvas is raster based and composed of pixel.
